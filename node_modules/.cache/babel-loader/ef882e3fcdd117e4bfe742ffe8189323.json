{"ast":null,"code":"var _jsxFileName = \"/home/user/repos/4-spa/SPA-Projekt-Gruppe2/recipe-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { db } from \"./firebase.config\";\nimport { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, addDoc, deleteDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [form, setForm] = useState({\n    title: \"\",\n    desc: \"\",\n    ingredients: [],\n    steps: []\n  });\n  const [popupActive, setPopupActive] = useState(false);\n  const recipesCollectionRef = collection(db, \"recipes\");\n  useEffect(() => {\n    onSnapshot(recipesCollectionRef, snapshot => {\n      setRecipes(snapshot.docs.map(doc => {\n        return {\n          id: doc.id,\n          viewing: false,\n          ...doc.data()\n        };\n      }));\n    });\n  }, []);\n\n  const handleView = id => {\n    const recipesClone = [...recipes];\n    recipesClone.forEach(recipe => {\n      if (recipe.id === id) {\n        recipe.viewing = !recipe.viewing;\n      } else {\n        recipe.viewing = false;\n      }\n    });\n    setRecipes(recipesClone);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!form.title || !form.desc || !form.ingredients || !form.steps) {\n      alert(\"Please fill out all fields\");\n      return;\n    }\n\n    addDoc(recipesCollectionRef, form);\n    setForm({\n      title: \"\",\n      desc: \"\",\n      ingredients: [],\n      steps: []\n    });\n    setPopupActive(false);\n  };\n\n  const handleIngredient = (e, i) => {\n    const ingredientsClone = [...form.ingredients];\n    ingredientsClone[i] = e.target.value;\n    setForm({ ...form,\n      ingredients: ingredientsClone\n    });\n  };\n\n  const handleStep = (e, i) => {\n    const stepsClone = [...form.steps];\n    stepsClone[i] = e.target.value;\n    setForm({ ...form,\n      steps: stepsClone\n    });\n  };\n\n  const handleIngredientCount = () => {\n    setForm({ ...form,\n      ingredients: [...form.ingredients, \"\"]\n    });\n  };\n\n  const handleStepCount = () => {\n    setForm({ ...form,\n      steps: [...form.steps, \"\"]\n    });\n  };\n\n  const removeRecipe = id => {\n    deleteDoc(doc(db, \"recipes\", id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPopupActive(!popupActive),\n      children: \"Add recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipes\",\n      children: recipes.map((recipe, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: recipe.desc\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), recipe.viewing && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: recipe.ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: ingredient\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Steps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: recipe.steps.map((step, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: step\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleView(recipe.id),\n            children: [\"View \", recipe.viewing ? 'less' : 'more']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove\",\n            onClick: () => removeRecipe(recipe.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, recipe.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), popupActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add a new recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: form.title,\n              onChange: e => setForm({ ...form,\n                title: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              value: form.desc,\n              onChange: e => setForm({ ...form,\n                desc: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), form.ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: ingredient,\n              onChange: e => handleIngredient(e, i)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleIngredientCount,\n              children: \"Add ingredient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Steps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), form.steps.map((step, i) => /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              value: step,\n              onChange: e => handleStep(e, i)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleStepCount,\n              children: \"Add step\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"remove\",\n              onClick: () => setPopupActive(false),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PRcAJkViwEqYtv6icPYGREGZFvg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/repos/4-spa/SPA-Projekt-Gruppe2/recipe-app/src/App.js"],"names":["db","useState","useEffect","collection","onSnapshot","doc","addDoc","deleteDoc","App","recipes","setRecipes","form","setForm","title","desc","ingredients","steps","popupActive","setPopupActive","recipesCollectionRef","snapshot","docs","map","id","viewing","data","handleView","recipesClone","forEach","recipe","handleSubmit","e","preventDefault","alert","handleIngredient","i","ingredientsClone","target","value","handleStep","stepsClone","handleIngredientCount","handleStepCount","removeRecipe","__html","ingredient","step"],"mappings":"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","sourcesContent":["import { db } from \"./firebase.config\"\nimport { useState, useEffect } from \"react\"\nimport {\n  collection,\n  onSnapshot,\n  doc,\n  addDoc,\n  deleteDoc\n} from \"firebase/firestore\"\n\nfunction App() {\n  const [recipes, setRecipes] = useState([])\n  const [form, setForm] = useState({\n    title: \"\",\n    desc: \"\",\n    ingredients: [],\n    steps: []\n  })\n  const [popupActive, setPopupActive] = useState(false)\n\n  const recipesCollectionRef = collection(db, \"recipes\")\n\n  useEffect(() => {\n    onSnapshot(recipesCollectionRef, snapshot => {\n      setRecipes(snapshot.docs.map(doc => {\n        return {\n          id: doc.id,\n          viewing: false,\n          ...doc.data()\n        }\n      }))\n    })\n  }, [])\n\n  const handleView = id => {\n    const recipesClone = [...recipes]\n\n    recipesClone.forEach(recipe => {\n      if (recipe.id === id) {\n        recipe.viewing = !recipe.viewing\n      } else {\n        recipe.viewing = false\n      }\n    })\n\n    setRecipes(recipesClone)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n\n    if (\n      !form.title ||\n      !form.desc ||\n      !form.ingredients ||\n      !form.steps\n    ) {\n      alert(\"Please fill out all fields\")\n      return\n    }\n\n    addDoc(recipesCollectionRef, form)\n\n    setForm({\n      title: \"\",\n      desc: \"\",\n      ingredients: [],\n      steps: []\n    })\n\n    setPopupActive(false)\n  }\n\n  const handleIngredient = (e, i) => {\n    const ingredientsClone = [...form.ingredients]\n\n    ingredientsClone[i] = e.target.value\n\n    setForm({\n      ...form,\n      ingredients: ingredientsClone\n    })\n  }\n\n  const handleStep = (e, i) => {\n    const stepsClone = [...form.steps]\n\n    stepsClone[i] = e.target.value\n\n    setForm({\n      ...form,\n      steps: stepsClone\n    })\n  }\n\n  const handleIngredientCount = () => {\n    setForm({\n      ...form,\n      ingredients: [...form.ingredients, \"\"]\n    })\n  }\n\n  const handleStepCount = () => {\n    setForm({\n      ...form,\n      steps: [...form.steps, \"\"]\n    })\n  }\n\n  const removeRecipe = id => {\n    deleteDoc(doc(db, \"recipes\", id))\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>My recipes</h1>\n\n      <button onClick={() => setPopupActive(!popupActive)}>Add recipe</button>\n\n      <div className=\"recipes\">\n        { recipes.map((recipe, i) => (\n          <div className=\"recipe\" key={recipe.id}>\n            <h3>{ recipe.title }</h3>\n\n            <p dangerouslySetInnerHTML={{ __html: recipe.desc }}></p>\n\n            { recipe.viewing && <div>\n              <h4>Ingredients</h4>\n              <ul>\n                { recipe.ingredients.map((ingredient, i) => (\n                  <li key={i}>{ ingredient }</li>\n                ))}\n              </ul>\n\n              <h4>Steps</h4>\n              <ol>\n                { recipe.steps.map((step, i) => (\n                  <li key={i}>{ step }</li>\n                ))}\n              </ol>\n            </div>}\n\n            <div className=\"buttons\">\n              <button onClick={() => handleView(recipe.id)}>View { recipe.viewing ? 'less' : 'more' }</button>\n              <button className=\"remove\" onClick={() => removeRecipe(recipe.id)}>Remove</button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      { popupActive && <div className=\"popup\">\n        <div className=\"popup-inner\">\n          <h2>Add a new recipe</h2>\n\n          <form onSubmit={handleSubmit}>\n\n            <div className=\"form-group\">\n              <label>Title</label>\n              <input \n                type=\"text\" \n                value={form.title} \n                onChange={e => setForm({...form, title: e.target.value})} />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Description</label>\n              <textarea \n                type=\"text\" \n                value={form.desc} \n                onChange={e => setForm({...form, desc: e.target.value})} />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Ingredients</label>\n              {\n                form.ingredients.map((ingredient, i) => (\n                  <input \n                    type=\"text\"\n                    key={i}\n                    value={ingredient} \n                    onChange={e => handleIngredient(e, i)} />\n                ))\n              }\n              <button type=\"button\" onClick={handleIngredientCount}>Add ingredient</button>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Steps</label>\n              {\n                form.steps.map((step, i) => (\n                  <textarea \n                    type=\"text\"\n                    key={i}\n                    value={step} \n                    onChange={e => handleStep(e, i)} />\n                ))\n              }\n              <button type=\"button\" onClick={handleStepCount}>Add step</button>\n            </div>\n\n            <div className=\"buttons\">\n              <button type=\"submit\">Submit</button>\n              <button type=\"button\" class=\"remove\" onClick={() => setPopupActive(false)}>Close</button>\n            </div>\n\n          </form>\n        </div>\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}