{"ast":null,"code":"var _jsxFileName = \"/home/user/repos/4-spa/SPA-Projekt-Gruppe2/recipe-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { db } from \"./firebase.config\";\nimport { useState, useEffect } from \"react\";\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [form, setForm] = useState({\n    title: \"\",\n    desc: \"\",\n    ingredients: [],\n    steps: []\n  });\n  const [popupActive, setPopupActive] = useState(false);\n  const recipesCollectionRef = collection(db, \"recipes\");\n  useEffect(() => {\n    onSnapshot(recipesCollectionRef, snapshot => {\n      setRecipes(snapshot.docs.map(doc => {\n        return {\n          id: doc.id,\n          viewing: false,\n          ...doc.data()\n        };\n      }));\n    });\n  }, []);\n\n  const handleView = id => {\n    const recipesClone = [...recipes];\n    recipesClone.forEach(recipe => {\n      if (recipe.id === id) {\n        recipe.viewing = !recipe.viewing;\n      } else {\n        recipe.viewing = false;\n      }\n    });\n    setRecipes(recipesClone);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const handleIngredient = (e, i) => {\n    const ingredientsClone = [...form.ingredients];\n    ingredientsClone[i] = e.target.value;\n    setForm({ ...form,\n      ingredients: ingredientsClone\n    });\n  };\n\n  const handleStep = (e, i) => {\n    const stepsClone = [...form.steps];\n    stepsClone[i] = e.target.value;\n    setForm({ ...form,\n      steps: stepsClone\n    });\n  };\n\n  const handleIngredientCount = () => {\n    setForm({ ...form,\n      ingredients: [...form.ingredients, \"\"]\n    });\n  };\n\n  const handleStepCount = () => {\n    setForm({ ...form,\n      steps: [...form.steps, \"\"]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPopupActive(!popupActive),\n      children: \"Add recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipes\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: recipe.desc\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), recipe.viewing && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: recipe.ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: ingredient\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Steps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: recipe.steps.map((step, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: step\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleView(recipe.id),\n            children: [\"View \", recipe.viewing ? \"less\" : \"more\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, recipe.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), popupActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      clasName: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add a new recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: form.title,\n              onChange: e => setForm({ ...form,\n                title: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              value: form.desc,\n              onChange: e => setForm({ ...form,\n                desc: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Ingrediants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), form.ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: ingredient,\n              onChange: e => handleIngredient(e, i)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleIngredientCount,\n              children: \"Add ingredient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Ingrediants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), form.steps.map((step, i) => /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              value: step,\n              onChange: e => handleStep(e, i)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleStepCount,\n              children: \"Add step\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cO1LYsVvxOPZtDSrxSrzRX9b8v8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/repos/4-spa/SPA-Projekt-Gruppe2/recipe-app/src/App.js"],"names":["db","useState","useEffect","collection","onSnapshot","App","recipes","setRecipes","form","setForm","title","desc","ingredients","steps","popupActive","setPopupActive","recipesCollectionRef","snapshot","docs","map","doc","id","viewing","data","handleView","recipesClone","forEach","recipe","handleSubmit","e","preventDefault","handleIngredient","i","ingredientsClone","target","value","handleStep","stepsClone","handleIngredientCount","handleStepCount","__html","ingredient","step"],"mappings":"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","sourcesContent":["import { db } from \"./firebase.config\";\nimport { useState, useEffect } from \"react\";\nimport { collection, onSnapshot } from \"firebase/firestore\";\n\n\n\n\nfunction App() {\n  const [recipes, setRecipes] = useState([]);\n  const [form, setForm] = useState({\n    title: \"\",\n    desc: \"\",\n    ingredients: [],\n    steps: [],\n  });\n  const [popupActive, setPopupActive] = useState(false);\n\n  const recipesCollectionRef = collection(db, \"recipes\");\n\n  useEffect(() => {\n    onSnapshot(recipesCollectionRef, (snapshot) => {\n      setRecipes(\n        snapshot.docs.map((doc) => {\n          return {\n            id: doc.id,\n            viewing: false,\n            ...doc.data(),\n          };\n        })\n      );\n    });\n  }, []);\n\n  const handleView = (id) => {\n    const recipesClone = [...recipes];\n\n    recipesClone.forEach((recipe) => {\n      if (recipe.id === id) {\n        recipe.viewing = !recipe.viewing;\n      } else {\n        recipe.viewing = false;\n      }\n    });\n\n    setRecipes(recipesClone);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const handleIngredient = (e, i) => {\n    const ingredientsClone = [...form.ingredients]\n\n    ingredientsClone[i] = e.target.value\n\n    setForm({\n      ...form,\n      ingredients: ingredientsClone\n    })\n  }\n\n  const handleStep = (e, i) => {\n    const stepsClone = [...form.steps]\n\n    stepsClone[i] = e.target.value\n\n    setForm({\n      ...form,\n      steps: stepsClone\n    })\n  }\n\n\n  const handleIngredientCount = () => {\n    setForm({\n      ...form,\n      ingredients: [...form.ingredients, \"\"]\n    })\n  }\n\n  const handleStepCount = () => {\n    setForm({\n      ...form,\n      steps: [...form.steps, \"\"]\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>My Recipes</h1>\n\n      <button onClick={() => setPopupActive(!popupActive)}>Add recipe</button>\n\n      <div className=\"recipes\">\n        {recipes.map((recipe) => (\n          <div className=\"recipe\" key={recipe.id}>\n            <h3>{recipe.title}</h3>\n\n            <p dangerouslySetInnerHTML={{ __html: recipe.desc }}></p>\n\n            {recipe.viewing && (\n              <div>\n                <h4>Ingredients</h4>\n\n                <ul>\n                  {recipe.ingredients.map((ingredient, i) => (\n                    <li key={i}>{ingredient}</li>\n                  ))}\n                </ul>\n\n                <h4>Steps</h4>\n                <ol>\n                  {recipe.steps.map((step, i) => (\n                    <li key={i}>{step}</li>\n                  ))}\n                </ol>\n              </div>\n            )}\n            <div className=\"buttons\">\n              <button onClick={() => handleView(recipe.id)}>\n                View {recipe.viewing ? \"less\" : \"more\"}\n              </button>\n              <button className=\"remove\">Remove</button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {popupActive && (\n        <div clasName=\"popup\">\n          <div className=\"popup-inner\">\n            <h2>Add a new recipe</h2>\n\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  value={form.title}\n                  onChange={(e) => setForm({ ...form, title: e.target.value })}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Description</label>\n                <textarea\n                  type=\"text\"\n                  value={form.desc}\n                  onChange={(e) => setForm({ ...form, desc: e.target.value })}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Ingrediants</label>\n                {form.ingredients.map((ingredient, i) => (\n                  <input\n                    type=\"text\"\n                    key={i}\n                    value={ingredient}\n                    onChange={(e) => handleIngredient(e, i)}\n                  />\n                ))}\n                <button type=\"button\" onClick={handleIngredientCount}>Add ingredient</button>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Ingrediants</label>\n                {form.steps.map((step, i) => (\n                  <textarea\n                    type=\"text\"\n                    key={i}\n                    value={step}\n                    onChange={(e) => handleStep(e, i)}\n                  />\n                ))}\n                <button type=\"button\" onClick={handleStepCount}>Add step</button>\n              </div>\n\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}